<div class="container mt-5">
  <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-3">
    <h3 class="mb-2 mb-md-0">Question Page</h3>

    <!-- Tombol filter dan tambah, berada di sebelah kanan -->
    <div class="d-flex flex-column flex-sm-row align-items-center justify-content-sm-start">
      <div class="dropdown me-2 mb-2 mb-sm-0">
        <!-- me-2 untuk memberi jarak antar tombol -->
        <button class="btn btn-outline-info dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false"><i class="bi bi-filter-square"></i> Filter</button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <% questions_category.forEach(category => { %>
          <li>
            <a class="dropdown-item" href="/question/filter/<%= encodeURIComponent(category.question_category) %>"> <%= category.question_category %> </a>
          </li>
          <% }) %>
          <li><a class="dropdown-item" href="#">Proses Pembelajaran</a></li>
          <li><a class="dropdown-item" href="#">Fasilitas Pembelajaran</a></li>
        </ul>
      </div>
      <button type="button" class="btn btn-outline-warning" data-bs-toggle="modal" data-bs-target="#addQuestion"><i class="bi bi-plus-lg"></i> Add Question</button>
    </div>
  </div>

  <div class="table-responsive">
    <table class="table table-striped table-hover table-bordered">
      <thead class="text-center">
        <tr>
          <th scope="col">No</th>
          <th scope="col">Questions</th>
          <th scope="col">Action</th>
        </tr>
      </thead>
      <tbody>
        <% questions.forEach((question, index) => { %>
        <tr>
          <th scope="row" class="text-center align-middle"><%= index + 1 %></th>
          <td class="align-middle"><%= question.question_text %></td>
          <td class="text-center align-middle">
            <a href="/edit/<%= question.id %>" class="btn btn-sm btn-primary me-1 mb-1 mb-md-0">
              <i class="bi bi-pencil-square"></i>
            </a>
            <a href="/delete/<%= question.id %>" class="btn btn-sm btn-danger">
              <i class="bi bi-folder-x"></i>
            </a>
          </td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="addQuestion" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="formAddQuestion">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalLabel">Tambah Pertanyaan</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="question_text" class="form-label">Isi Pertanyaan</label>
            <textarea class="form-control" id="question_text" name="question_text" required placeholder="Masukkan teks pertanyaan"></textarea>
          </div>
          <div class="mb-3">
            <label for="question_type" class="form-label">Tipe Pertanyaan</label>
            <select class="form-select" id="question_type" name="question_type">
              <option value="radio" selected>Radio (Sangat Puas / Puas / Tidak Puas)</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
          <button type="submit" class="btn btn-primary">Simpan</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- end Modal  -->

<script>
  document.getElementById("formAddQuestion").addEventListener("submit", async function (event) {
    event.preventDefault(); // Prevent the default form submission

    const formQuestionData = {
      question_text: document.getElementById("question_text").value,
      question_type: document.getElementById("question_type").value,
    };

    try {
      const response = await fetch("/question/question-add", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formQuestionData),
      });

      const result = await response.json();

      if (result.success) {
        Swal.fire({
          icon: "success",
          title: "Pertanyaan berhasil ditambahkan!",
          text: result.message,
          timer: 2000,
          showConfirmButton: false,
        }).then(() => {
          window.location.reload(); // Reload the page after success
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Gagal menambahkan pertanyaan!",
          text: result.message,
          timer: 2000,
          showConfirmButton: false,
        });
      }
    } catch (error) {
      Swal.fire({
        icon: "error",
        title: "Gagal menambahkan pertanyaan!",
        text: error.message,
        timer: 2000,
        showConfirmButton: false,
      });
    }
  });
</script>
