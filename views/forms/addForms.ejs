<link rel="stylesheet" href="/css/forms/addForms.css" />

<div class="container mt-5 fade-in">
  <div class="bg-white rounded-4 shadow-sm p-4 p-md-5">
    <h3 class="fw-bold mb-4"><i class="bi bi-journal-plus me-2"></i> Buat Formulir dan Pertanyaan</h3>

    <form id="form-create">
      <!-- Informasi Formulir -->
      <div class="mb-4">
        <label class="form-label fw-semibold">Judul Formulir</label>
        <input type="text" name="title" class="form-control rounded-3" required placeholder="Contoh: Survei Kepuasan Mahasiswa" />
      </div>

      <div class="mb-4">
        <label class="form-label fw-semibold">Deskripsi</label>
        <textarea name="description" class="form-control rounded-3" rows="3" placeholder="Deskripsi singkat tentang formulir..."></textarea>
      </div>

      <!-- Kategori Formulir -->
      <div class="mb-4">
        <label class="form-label fw-semibold">Kategori Formulir</label>
        <select name="category" class="form-select rounded-3" required>
          <option value="">Pilih kategori formulir</option>
          <option value="Akademik">Metode Pembelajaran</option>
          <option value="Fasilitas">Fasilitas dan Sarana Pembelajaran</option>
          <option value="Lainnya">Lainnya</option>
        </select>
      </div>

      <!-- Daftar Pertanyaan -->
      <div id="questions-container">
        <div class="card p-3 shadow-sm mb-3 question-item">
          <div class="d-flex justify-content-between align-items-center mb-2">
            <h6 class="mb-0 fw-semibold">Pertanyaan #1</h6>
          </div>
          <input type="text" name="questions[]" class="form-control mb-2" placeholder="Tulis pertanyaan..." required />

          <!-- Tipe pertanyaan -->
          <select name="types[]" class="form-select">
            <option value="radio">Radio</option>
            <option value="text">Text</option>
          </select>
        </div>
      </div>

      <!-- Tombol Tambah Pertanyaan -->
      <div class="mb-4">
        <button type="button" class="btn btn-outline-primary rounded-pill" id="add-question-btn"><i class="bi bi-plus-circle me-1"></i> Tambah Pertanyaan</button>
      </div>

      <!-- Tombol Simpan -->
      <button type="submit" class="btn btn-primary px-4 rounded-pill"><i class="bi bi-send-fill me-2"></i> Simpan Formulir</button>
    </form>
  </div>
</div>

<!-- Tambahkan script SweetAlert dan form handler -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  let questionCount = 1;

  document.getElementById("add-question-btn").addEventListener("click", () => {
    questionCount++;
    const container = document.getElementById("questions-container");

    const div = document.createElement("div");
    div.className = "card p-3 shadow-sm mb-3 question-item new";
    div.innerHTML = `
      <div class="d-flex justify-content-between align-items-center mb-2">
        <h6 class="mb-0 fw-semibold">Pertanyaan #${questionCount}</h6>
        <button type="button" class="btn btn-sm btn-outline-danger btn-remove-question rounded-circle" title="Hapus">
          <i class="bi bi-trash"></i>
        </button>
      </div>
      <input type="text" name="questions[]" class="form-control mb-2" placeholder="Tulis pertanyaan..." required />
      <select name="types[]" class="form-select">
        <option value="radio">Radio</option>
        <option value="text">Text</option>
      </select>
    `;
    container.appendChild(div);

    div.querySelector(".btn-remove-question").addEventListener("click", () => {
      div.style.transition = "all 0.3s ease";
      div.style.opacity = "0";
      div.style.transform = "translateX(30px)";
      setTimeout(() => div.remove(), 300);
    });
  });

  document.getElementById("form-create").addEventListener("submit", async (e) => {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);

    const data = {
      title: formData.get("title"),
      description: formData.get("description"),
      category: formData.get("category"),
      questions: formData.getAll("questions[]"),
      types: formData.getAll("types[]"),
    };

    try {
      const response = await fetch("/forms/add", {
        method: "POST",
        headers: { "Content-Type": "application/json", Authorization: `Bearer ${window.token}` },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        Swal.fire({
          icon: "success",
          title: "Berhasil!",
          text: "Formulir berhasil disimpan!",
          showConfirmButton: false,
          timer: 2000,
        });
        setTimeout(() => {
          window.location.href = "/forms";
        }, 2000);
      } else {
        const result = await response.json();
        Swal.fire("Gagal", result.message || "Terjadi kesalahan", "error");
      }
    } catch (err) {
      Swal.fire("Error", "Gagal mengirim data ke server", "error");
    }
  });
</script>
