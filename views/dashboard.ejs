<!-- views/dashboard.ejs -->
<link rel="stylesheet" href="/css/dashboard.css" />

<div class="container py-4">
  <div class="bg-white p-4 rounded shadow mb-4">
    <h2 class="text-primary fw-bold">Dashboard</h2>
  </div>

  <!-- Filter Tanggal -->
  <div class="card shadow-sm border-0 rounded-4 mb-4">
    <div class="card-body">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h6 class="fw-semibold text-secondary mb-0"><i class="bi bi-calendar-range me-2"></i> Filter Rentang Tanggal</h6>
      </div>

      <form method="GET" class="row g-3 align-items-end">
        <div class="col-md-4">
          <label for="start" class="form-label small text-muted">Tanggal Mulai</label>
          <input type="date" name="start" id="start" class="form-control" value="<%= start || '' %>" />
        </div>
        <div class="col-md-4">
          <label for="end" class="form-label small text-muted">Tanggal Akhir</label>
          <input type="date" name="end" id="end" class="form-control" value="<%= end || '' %>" />
        </div>
        <div class="col-md-4 d-flex align-items-end">
          <button class="btn btn-outline-primary w-100"><i class="bi bi-funnel-fill me-1"></i> Terapkan Filter</button>
        </div>
      </form>

      <% if (start || end) { %>
      <div class="alert alert-info mt-4 py-2 px-3 small mb-0 rounded-3">
        <i class="bi bi-filter-circle me-1"></i>
        Menampilkan data dari <strong><%= start || 'awal' %></strong> hingga <strong><%= end || 'akhir' %></strong>
      </div>
      <% } %>
    </div>
  </div>

  <!-- Summary Cards -->
  <div class="row g-4 mb-4">
    <% const cards = [ { label: 'Positif', color: '#198754', value: summary.positif, icon: 'bi-emoji-smile' }, { label: 'Netral', color: '#6c757d', value: summary.netral, icon: 'bi-emoji-neutral' }, { label: 'Negatif', color: '#dc3545',
    value: summary.negatif, icon: 'bi-emoji-frown' } ]; %> <% cards.forEach((card) => { %>
    <div class="col-md-4">
      <div class="card-box text-white" style="background-color: <%= card.color %>">
        <div>
          <div class="info-box fs-3"><%= card.value %> Jawaban</div>
          <div class="info-label text-white-50">Sentimen <%= card.label %></div>
        </div>
        <div class="card-icon fs-1"><i class="bi <%= card.icon %>"></i></div>
      </div>
    </div>
    <% }) %>
  </div>

  <!-- Chart Section -->
  <div class="row mb-4">
    <div class="col-md-8">
      <div class="card shadow-sm p-4">
        <h5 class="section-title">Distribusi Sentimen Berdasarkan Kategori</h5>
        <canvas id="sentimentChart" height="300"></canvas>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card shadow-sm p-4">
        <h5 class="section-title">Persentase Sentimen</h5>
        <canvas id="sentimentPieChart" height="200"></canvas>
      </div>
    </div>
  </div>

  <!-- Aktivitas dan Status -->
  <div class="row g-4">
    <div class="col-md-6">
      <div class="card shadow-sm p-4 scroll-animate">
        <h5 class="section-title mb-3">Aktivitas Terbaru</h5>
        <ul class="list-group list-group-flush activity-list">
          <% activity.forEach((item, i) => { %>
          <li class="list-group-item d-flex justify-content-between align-items-center px-0 py-2 border-0" style="transition-delay: <%= i * 0.1 %>s">
            <span><i class="bi bi-clock-history me-2 text-primary"></i><%= item.text %></span>
            <small class="text-muted"><%= item.time %></small>
          </li>
          <% }) %>
        </ul>
      </div>
    </div>

    <div class="col-md-6">
      <div class="card shadow-sm p-4 scroll-animate">
        <h5 class="section-title mb-3">Status Tanggapan</h5>
        <table class="table table-borderless align-middle table-rows">
          <thead class="text-muted small">
            <tr>
              <th>Kategori</th>
              <th>Responden</th>
              <th>Status</th>
            </tr>
          </thead>
          <tbody>
            <% categoryStatus.forEach((item, i) => { %>
            <tr style="transition-delay: <%= i * 0.1 %>s">
              <td><%= item.kategori %></td>
              <td><%= item.responden %></td>
              <td>
                <% if (item.status === "Selesai") { %>
                <span class="badge bg-success-subtle text-success fw-semibold px-3 py-1 rounded-pill">Selesai</span>
                <% } else if (item.status === "Diproses") { %>
                <span class="badge bg-warning-subtle text-warning fw-semibold px-3 py-1 rounded-pill">Diproses</span>
                <% } else { %>
                <span class="badge bg-danger-subtle text-danger fw-semibold px-3 py-1 rounded-pill">Tertunda</span>
                <% } %>
              </td>
            </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Script Section -->
<script>
  // Cek role dari localStorage (Frontend Authorization)
  const user = JSON.parse(localStorage.getItem("user"));
  if (!user || user.role !== "ADMIN") {
    alert("Anda tidak memiliki izin untuk mengakses halaman ini.");
    window.location.href = "/";
  }

  // Bar Chart
  const ctxBar = document.getElementById('sentimentChart').getContext('2d');
  new Chart(ctxBar, {
    type: 'bar',
    data: {
      labels: <%- JSON.stringify(labels) %>,
      datasets: [
        {
          label: 'Positif',
          data: <%- JSON.stringify(positifData) %>,
          backgroundColor: '#198754'
        },
        {
          label: 'Netral',
          data: <%- JSON.stringify(netralData) %>,
          backgroundColor: '#6c757d'
        },
        {
          label: 'Negatif',
          data: <%- JSON.stringify(negatifData) %>,
          backgroundColor: '#dc3545'
        }
      ]
    },
    options: {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true,
          title: {
            display: true,
            text: 'Jumlah'
          }
        }
      }
    }
  });

  // Pie Chart
  const ctxPie = document.getElementById('sentimentPieChart').getContext('2d');
  new Chart(ctxPie, {
    type: 'doughnut',
    data: {
      labels: ['Positif', 'Netral', 'Negatif'],
      datasets: [{
        data: [<%= summary.positif %>, <%= summary.netral %>, <%= summary.negatif %>],
        backgroundColor: ['#198754', '#6c757d', '#dc3545']
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'bottom'
        }
      }
    }
  });

  // Animasi Scroll
  document.addEventListener('DOMContentLoaded', function () {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const cards = document.querySelectorAll('.scroll-animate');
    const cardObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('show');
          cardObserver.unobserve(entry.target);
        }
      });
    }, observerOptions);

    cards.forEach(card => cardObserver.observe(card));

    const items = [...document.querySelectorAll('.activity-list li, .table-rows tr')];
    const itemObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('show');
          itemObserver.unobserve(entry.target);
        }
      });
    }, observerOptions);

    setTimeout(() => {
      items.forEach(item => itemObserver.observe(item));
    }, 300);
  });
</script>
